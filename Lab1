#Titanic project

#Installing packages
install.packages("pscl")
install.packages("lmtest")
install.packages("dominanceanalysis")
install.packages("tidyverse")
install.packages("psych")
install.packages("gridExtra")
install.packages("kableExtra")
install.packages("gtsummary")

library(pscl) 
library(lmtest) 
library(dominanceanalysis) 
library(tidyverse)
library(psych)
library(gridExtra)
library(ggplot2)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(kableExtra)
library(gtsummary)

#Downloading data
titanic_data = read.csv("https://raw.githubusercontent.com/kekecsz/SIMM61-Course-
materials/main/Home_assignment/Titanic%20-%20training%20set.csv ")

#Exploring data
titanic_data %>%
  summary()

describe(titanic_data)

table(titanic_data$Survived)

#Finding missing values
table(is.na(titanic_data$PassengerId))
table(is.na(titanic_data$Survived))
table(is.na(titanic_data$Pclass))
table(is.na(titanic_data$Name))
table(is.na(titanic_data$Sex))
table(is.na(titanic_data$SibSp))
table(is.na(titanic_data$Parch))
table(is.na(titanic_data$Ticket))
table(is.na(titanic_data$Fare))
table(is.na(titanic_data$Embarked))
table(is.na(titanic_data$sex))
table(is.na(titanic_data$Cabin))

#The categories of "Age" and "Embarked" have have missing values
#The median and mode values are used to fill the missing values

#Cleaning missing values of Age
median(titanic_data$Age, na.rm = TRUE)
median.age <- median(titanic_data$Age, na.rm = TRUE)
titanic_data[is.na(titanic_data$Age), "Age"] <- median.age

#Cleaning missing values of Embarked
table(titanic_data$Embarked)
titanic_data[titanic_data$Embarked=='', "Embarked"] <- 'S'

#Increasing the categories in order to better and more simply predict survival
#Creating a new category for age groups (child and adult)
titanic_data$Child[titanic_data$Age < 18] <- 0
titanic_data$Child[titanic_data$Age >= 18] <- 1

#Creating new category for the fare type (low, medium, high)
titanic_data$Fare_type[titanic_data$Fare <= 10] <- 0
titanic_data$Fare_type[titanic_data$Fare < 80 & titanic_data$Fare > 10] <- 1
titanic_data$Fare_type[titanic_data$Fare >= 80] <- 2

#Creating a new category on the status of whether siblings or spouses accompanied the individual (yes/no)
titanic_data$SibSp_status[titanic_data$SibSp == 0] <- 0
titanic_data$SibSp_status[titanic_data$SibSp > 0] <- 1

#Creating a new category on the status of whether parents or children accompanied the individual (yes/no)
titanic_data$Parch_status[titanic_data$Parch <= 0] <- 0
titanic_data$Parch_status[titanic_data$Parch > 0] <- 1

#Creating a new category based on age groups
titanic_data$Age_group[titanic_data$Age < 14] <- 0
titanic_data$Age_group[titanic_data$Age < 25 & titanic_data$Age >= 14] <- 1
titanic_data$Age_group[titanic_data$Age < 39 & titanic_data$Age >= 25] <- 2
titanic_data$Age_group[titanic_data$Age < 65 & titanic_data$Age >= 39] <- 3
titanic_data$Age_group[titanic_data$Age >= 65] <- 4


#Defining categorical variables as factors
#Re-coding the values for a better understanding

str(titanic_data)

titanic_data = titanic_data %>% 
  mutate(Survived = factor(recode(Survived,
                                  "0" = "no",
                                  "1" = "yes")),
         Pclass = factor(Pclass),
         Sex = factor(Sex),
         Embarked = factor(Embarked),
         Child = factor(recode(Child,
                               "0" = "yes",
                               "1" = "no")),
         Fare_type = factor(recode(Fare_type,
                                   "0" = "low",
                                   "1" = "medium",
                                   "2" = "high")),
         SibSp_status = factor(recode(SibSp_status,
                                      "0" = "no",
                                      "1" = "yes")),
         Parch_status = factor(recode(Parch_status,
                                      "0" = "no",
                                      "1" = "yes")),
         Age_group = factor(recode(Age_group,
                                   "0" = "0-13",
                                   "1" = "14-24",
                                   "2" = "25-38",
                                   "3" = "39-64",
                                   "4" = "65+")))
        
titanic_data = titanic_data %>%
  mutate(Fare_type = factor(Fare_type,
                            levels = c("low", "medium", "high")))

#Creating and exploring figures
titanic_data %>%
  ggplot() +
  aes(x = Survived) +
  geom_bar()
#Same code used for other factors

#Figures on how survival is affected by the different predictors
titanic_data %>%
  ggplot() +
  aes(x = Sex, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Pclass, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Child, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = SibSp_status, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Parch_status, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Fare_type, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Embarked, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Parch, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = SibSp, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Age, fill = Survived) +
  geom_bar()

titanic_data %>%
  ggplot() +
  aes(x = Age_group, fill = Survived) +
  geom_bar()

#Logistic regression model

mod_log = glm(Survived ~ Sex + Pclass + Age_group + SibSp + Parch + Fare_type + Embarked, 
           family = binomial(), data = titanic_data)

summary(mod_log)

#Table on Odds ratios and Confidence intervals
tab_model(mod_log, show.aic = T)

#Null model
modnull <- glm(Survived ~ 1,
               family = binomial(), data = titanic_data)

summary(modnull)

tab_model(modnull, show.aic = T)

#Prediction accuracy for categorization
titanic_data = titanic_data %>%
  mutate(pred_mod1 = predict(mod_log)) %>%
  mutate(pred_mod1 = case_when(pred_mod1 <= 0 ~ "no",
                               pred_mod1 > 0 ~ "yes"))
#Coding correct guesses
titanic_data = titanic_data %>%
  mutate(correct_prediction = case_when(pred_mod1 == Survived ~ "correct",
                                        pred_mod1 != Survived ~ "incorrect"))
#Overall correct categorization rate
titanic_data %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count/sum(count))

#Percentage of survival
titanic_data %>%
  group_by(Survived) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))

#Survival status and predicted values
titanic_data %>%
  group_by(Survived, pred_mod1) %>%
  summarize(n = n()) %>%
  spread(Survived, n)

#Correctly categorized survival
titanic_data %>%
  filter(Survived == "yes") %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))

#Correctly categorized non-survival
titanic_data %>%
  filter(Survived == "no") %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))

#Likelihood ratio test
lrtest(modnull, mod_log)

#R squared
pR2(mod_log)

#Log likelihood/Deviance
pR2(mod_log)["llh"] * -2
pR2(modnull)["llh"] * -2


#Regression equations

#Sue without Leonardo
4.87004 - 1.95002 * 1 - 0.21162 * 1 - 0.43764 * 1

exp(2.27076)
9.68676/(1 + 9.68676)

#Sue with Leonardo
4.87004 - 1.95002 * 1 - 0.21162 * 2 - 0.43764 * 1

exp(2.05914)
7.839225/(1 + 7.839225)

#Kate without Leonardo
4.87004 - 1.95002 * 1 - 2.11658 * 1  - 0.21162 * 1 - 0.43764 * 1

exp(0.15418)
1.166701/(1 + 1.166701)

#Kate with Leonardo
4.87004 - 1.95002 * 1 - 2.11658 * 1  -  0.47078 * 1 - 0.21162 * 1 - 0.43764 * 1

exp(-0.3166)
0.7286221/(1 + 0.7286221)

#Dominance analysis
dominance_mod<-dominanceAnalysis(mod_log)

contributionByLevel(dominance_mod, fit.functions="r2.m")

plot(dominance_mod, which.graph ="conditional",fit.function = "r2.m")

averageContribution(dominance_mod,fit.functions = "r2.m")

plot(dominance_mod, which.graph ="general",fit.function = "r2.m") + coord_flip()


