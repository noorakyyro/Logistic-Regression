
### MIXED LINER MODELS ###   

#Downloading packages

install.packages("cAIC4")
install.packages("r2glmm")
install.packages("lme4")
install.packages("lmerTest")
install.packages("MuMIn")
install.packages("sjPlot")
install.packages("sjmisc")
install.packages("sjlabelled")

library(psych) 
library(tidyverse) 
library(cAIC4) 
library(r2glmm) 
library(lme4)
library(lmerTest)
library(MuMIn)
library(ggplot2)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(dominanceanalysis) 

stdCoef.merMod <- function(object) {
  sdy <- sd(getME(object, "y"))
  sdx <- apply(getME(object, "X"), 2, sd)
  sc <- fixef(object) * sdx/sdy
  se.fixef <- coef(summary(object))[, "Std. Error"]
  se <- se.fixef * sdx/sdy
  return(data.frame(stdcoef = sc, stdse = se))
}

#Downloading data 
surgery_data = read.csv("C:\\Users\\noora\\Documents\\uni_R\\surgery_data_A.csv")
surgery_test_data = read.csv("C:\\Users\\noora\\Documents\\uni_R\\surgery_data_B.csv")

#Exploring data
summary(surgery_data)
tail(surgery_data)
str(surgery_data)
table(surgery_data$sex)

str(surgery_test_data)

### CLEANING DATA ###

#Replacing 'woman' with 'female'
surgery_data[surgery_data$sex=='woman', "sex"] <- 'female'

#Defining categorical variables as factors
surgery_data = surgery_data %>% 
  mutate(hospital = factor(hospital),
         sex = factor(sex))

surgery_test_data = surgery_test_data %>% 
  mutate(hospital = factor(hospital),
         sex = factor(sex))

### VISUALISING DATA ###

hist(surgery_data$pain)
boxplot(pain ~ hospital, data = surgery_data)

### MIXED LINEAR MODELS ###

#Random intercept model
mod_rnd_int = lmer(pain ~ age + sex + STAI_trait + pain_cat + mindfulness + cortisol_serum + (1 | hospital), 
                   data = surgery_data)
summary(mod_rnd_int)

tab_model(mod_rnd_int, show.se = T, show.ci = T)

#Prediction of the new data file
pred <- predict(mod_rnd_int, newdata = surgery_test_data, re.form = NA)

#Calculating RSS
sum(abs(surgery_test_data$pain - pred)^2)

#Null model
mod_null <- lm(pain ~ 1, data = surgery_test_data)

#Calculating TSS
sum((surgery_test_data$pain - predict(mod_null))^2)

#Calculating R squared
1 - (307.3396/495.5)

#Building a new mixed models
mod_rnd_int_2 = lmer(pain ~ cortisol_serum + (1 | hospital), 
                     data = surgery_data)

summary(mod_rnd_int_2)

mod_rnd_slope = lmer(pain ~ cortisol_serum + (cortisol_serum | hospital), 
                     data = surgery_data)

tab_model(mod_rnd_int_2, mod_rnd_slope, show.aic = T, dv.labels = c("Random intercept", "Random slope"))

#Visualizing the new models

surgery_data = surgery_data %>%
  mutate(pred_int = predict(mod_rnd_int_2), pred_slope = predict(mod_rnd_slope)) 

surgery_data %>%
  ggplot() + aes(y = pain, x = cortisol_serum, group = hospital) +
  geom_point(aes(color = hospital), size = 2) + geom_line(color = "red",
                                                       aes(y = pred_int, x = cortisol_serum)) + facet_wrap(~hospital,
                                                                                                         ncol = 2)
surgery_data %>%
  ggplot() + aes(y = pain, x = cortisol_serum, group = hospital) +
  geom_point(aes(color = hospital), size = 2) + geom_line(color = "red",
                                                          aes(y = pred_slope, x = cortisol_serum)) + facet_wrap(~hospital,
                                                                                                              ncol = 2)
# Testing which is a better model (random intercept vs. slope)
                                                                               
#Conditional AIC

cAIC(mod_rnd_int_2)$caic
cAIC(mod_rnd_slope)$caic

#Likelihood test ratio
anova(mod_rnd_int_2, mod_rnd_slope)

tab_model(mod_rnd_int_2, mod_rnd_slope, show.aic = T, show.loglik = T, dv.labels = c("Random intercept", "Random slope"))
